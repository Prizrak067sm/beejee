<?php
    class View
    {
        private $catalog_views;
        function __construct($_dir_app)
        {
            $this->catalog_views=$_dir_app."/views/";
        }

        function generate($content_view, $base_view=null, $data_for_view=null, $data_model=null)
        {
            if ($data_for_view)   // Если с контроллера переданы данные, распаковываем их из массива в переменные.
                extract($data_for_view);

            // --- В шаблоне $template_view будет включаться страница с контентом - $content_view. Если контроллер передает имя
            //     страницы, то добавляем префикс с каталогом вьюшек и инструкцию включения - include. В шаблоне $template_view
            //     будет выполнена строка переменной $content_view. Таким образом, если нужен только шаблон без контента,
            //     будет передано значение null - файла не существует. Переменной $content_view присваиваем null. ---
            if ($content_view && file_exists($this->catalog_views.$content_view))
                $content_view = "include " . "'" . $this->catalog_views . $content_view . "';";
            else
                $content_view = null;
            // ------------------------------------------------------------------------------------------------------

            if ($base_view)
                include $this->catalog_views.$base_view;   // Включаем шаблон.
            else
                eval($content_view);
        }

        // --- Метод выводит ссылки на страницы, их количество задано
        //     параметром $count_page, а текущая страница - параметр $page. ---
        function getPagination($page, $count_page)
        {
            $classNameLinkPage = 'links-number-page';   // Класс для генерируемых далее ссылок.
            $idLinkThisPage = 'id="link-numberPage-activ"';   // Ид для сгенерированной далее ссылки, соответствующей текущей странице.
            $idLinkNumberPage = null;   // Для ИДов генерируемых ссылок.

            $countPrintPage_before_thisPage = 3;   // Количество номеров страниц ДО текущей страницы. Возможно, будет уменьшено для исключения отображения отрицательных страниц и увеличено для сохранения количества отображаемых номеров (количество определяется ниже).
            $countPrintPage_after_thisPage = 3;    // Количество номеров страниц ПОСЛЕ текущей страницы. Возможно, будет уменьшено для исключения отображения "лишних" страниц и увеличено для сохранения количества отображаемых номеров (количество определяется ниже).
            $countPrintPage = $countPrintPage_before_thisPage + $countPrintPage_after_thisPage + 1;   // Количество отображаемых номеров страниц.

            // --- Определяем номер страницы, который будет отображен последним в списке. ---
            $deltaLast = $page + $countPrintPage_after_thisPage;                                            // Определяем номер последней отображаемой страницы, смещая на заданное число от текущей ...
            $potentialLastPrintPage = ($deltaLast > $countPrintPage) ? $deltaLast : $countPrintPage;        // если номер последней для отображения страницы меньше, чем количество на вывод, значит речь идет о начале списка номеров, поэтому для сохранения общего количества отображаемых страниц увеличиваем количество страниц ПОСЛЕ текущей, присваивая последней для отображения страницы число общего количества для отображения.
            $lastPrintPage = $potentialLastPrintPage < $count_page ? $potentialLastPrintPage : $count_page; // далее смотрим на конец списка номеров. Если потенциальный последний номер больше общего количества страниц, исключаем этот момент, указывая последний для отображения общее количество страниц.
            // ------------------------------------------------------------------------------
            // --- Определяем номер страницы, который будет отображен первым в списке. ---
            $deltaFirst = $page - $countPrintPage_before_thisPage;                                                                                  // Определяем номер первой отображаемой страницы, смещая на заданное число от текущей ...
            $potentialFirstPrintPage = ($lastPrintPage - $deltaFirst + 1) == $countPrintPage ? $deltaFirst : $lastPrintPage - $countPrintPage + 1;  // если номер сохраняет заданное количество номеров, его и оставляем, иначе, речь идет о конце списка  и первую отображаемую определяем так, чтобы было заданное количество номеров.
            $firstPrintPage = $potentialFirstPrintPage > 0 ? $potentialFirstPrintPage : 1;   // Номер первой отображаемой страницы.                 // далее смотрим на начало списка номеров и исключаем отрицательное значение.
            //----------------------------------------------------------------------------

            $numberPrevPage = $page-1;   // Номер предыдущей, относительно текущей. Нужно для ссылок-стрелок.
            $numberNextPage = $page+1;   // Номер следующей, относительно текущей. Нужно для ссылок-стрелок.

            // --- Определяем выводить ли стрелку для перехода на предыдущую страницу. Когда текущая - 1, то предыдущая - 0,
            //     поэтому выводить надо, когда текущая от 2, в этом случае предыдущая от 1, то есть более нуля. ---
            if ($numberPrevPage>0)
                echo "<a href='?page=$numberPrevPage' class='$classNameLinkPage'>&laquo;</a>";
            // -------------------------------------------------------------------------------------------------------------

            // --- Так как выводятся не все номера, то нужно показывать первую страницу, когда её нет. ---
            if ($firstPrintPage != 1)
                echo "<a href='?page=1' class='$classNameLinkPage'>1</a> ... ";
            // -------------------------------------------------------------------------------------------

            // --- Формируем и выводим ссылки от определенного для вывода номера первой
            //     страницы до определенного для вывода последнего номера страницы. ---
            for ($i = $firstPrintPage; $i <= $lastPrintPage; $i++) {
                $idLinkNumberPage = $i != $page ? "id='link-numberPage_$i'" : $idLinkThisPage;   // Определяем Ид для очередной ссылки. Получается ид с индексом для всех, кроме ссылки с текущим номером, для нее ид определен в переменной $idLinkThisPage.
                echo "<a href='?page=$i' class='$classNameLinkPage' $idLinkNumberPage>$i   </a>";
            }
            // -------------------------------------------------------------------------

            // --- Так как выводятся не все номера, то нужно показывать последнюю страницу, когда её нет. ---
            if ($lastPrintPage != $count_page)
                echo "... <a href='?page=$count_page' class='$classNameLinkPage'>$count_page</a>";
            // ----------------------------------------------------------------------------------------------

            // --- Определяем выводить ли стрелку для перехода на следующую страницу. Когда текущая - последняя, то следующая - несуществуюая,
            //     поэтому выводить надо, когда текущая - предпоследняя, в этом случае следующая не больше последней, то есть равна или меньше последней. ---
            if ($numberNextPage<=$count_page)
                echo "<a href='?page=$numberNextPage' class='$classNameLinkPage'>&raquo;</a>";
            // ----------------------------------------------------------------------------------------------------------------------------------------------

        }
        // ------ Конец getPagination. -----------------------------------------
    }
?>